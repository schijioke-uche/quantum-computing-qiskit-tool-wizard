# .github/workflows/pytest.yml
name: Qiskit Starter Tool Wizard Python Version Compatibility

on:
  push:
    branches: [ "main", "stable" ]
  pull_request:
    branches: [ "main", "stable" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then
            if [ "${{ matrix.python-version }}" = "3.8" ]; then
              # Install all requirements except qiskit-serverless for Python 3.8
              grep -v '^qiskit-serverless' requirements.txt > filtered-reqs.txt
              pip install -r filtered-reqs.txt
            else
              pip install -r requirements.txt
            fi
          fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest
        continue-on-error: true      # don’t immediately fail the job

      - name: Check pytest result
        if: ${{ always() }}
        run: |
          RC=$?
          if [ "$RC" -eq 5 ]; then
            echo "⚠️  No tests were collected (pytest exit code $RC), skipping."
          elif [ "$RC" -ne 0 ]; then
            echo "❌ pytest failed with exit code $RC"
            exit $RC
          else
            echo "✅ Python version compatibility passed."
          fi
